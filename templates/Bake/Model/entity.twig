{% set propertyHintMap = DocBlock.buildEntityPropertyHintTypeMap(propertySchema ?: []) %}
{% set associationHintMap = DocBlock.buildEntityAssociationHintTypeMap(propertySchema ?: []) %}
{% set annotations = DocBlock.propertyHints(propertyHintMap) %}

{%- if associationHintMap %}
    {%- set annotations = annotations|merge(['']) %}
    {%- set annotations = annotations|merge(DocBlock.propertyHints(associationHintMap)) %}
{% endif %}

{%- set accessible = Bake.getFieldAccessibility(fields, primaryKey) %}
<?php
declare(strict_types=1);

namespace {{ namespace }}\Model\Entity;

{% if not override %}
use Cake\ORM\Entity;

{% endif %}
{{ DocBlock.classDescription(name, 'Entity', annotations)|raw }}
class {{ name }} extends {{ override ? "\\#{theme}\\Model\\Entity\\#{name}" : 'Entity' }}
{
{% if override %}
    public function __construct(array $properties = [], array $options = [])
    {
        parent::__construct($properties, $options);

{% if accessible %}
        $this->_accessible += [{{ Bake.stringifyList(accessible, {'indent': 3, 'quotes': false})|raw }}];
{% else %}
        //$this->_accessible += [];
{% endif %}

{% if hidden %}
        $this->_hidden += [{{ Bake.stringifyList(hidden, {'indent': 3})|raw }}];
{% else %}
        //$this->_hidden += [];
{% endif %}
    }
{% else %}
{% if accessible %}
    /**
     * Fields that can be mass assigned using newEntity() or patchEntity().
     *
     * Note that when '*' is set to true, this allows all unspecified fields to
     * be mass assigned. For security purposes, it is advised to set '*' to false
     * (or remove it), and explicitly make individual fields accessible as needed.
     *
     * @var array
     */
    protected $_accessible = [{{ Bake.stringifyList(accessible, {'quotes': false})|raw }}];
{% endif %}

{%- if hidden %}

    /**
     * Fields that are excluded from JSON versions of the entity.
     *
     * @var array
     */
    protected $_hidden = [{{ Bake.stringifyList(hidden)|raw }}];
{% endif %}
{% endif %}

{%- if not accessible and not hidden %}

{% endif %}

    /**
     * Fields that can be filtered.
     *
     * @var array
     */
    //public static $filterable = [];

    /**
     * The priority of the fields, unspecified fields have the highest priority. Add fields to this list
     * in order of priority from high to low.
     *
     * @var array
     */
    //public static $priority = [];
}
