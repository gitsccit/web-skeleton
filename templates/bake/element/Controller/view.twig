{% set allAssociations = Bake.aliasExtractor(modelObj, 'BelongsTo') %}
{% set allAssociations = allAssociations|merge(Bake.aliasExtractor(modelObj, 'BelongsToMany')) %}
{% set allAssociations = allAssociations|merge(Bake.aliasExtractor(modelObj, 'HasOne')) %}
{% set allAssociations = allAssociations|merge(Bake.aliasExtractor(modelObj, 'HasMany')) %}
    /**
     * View method
     *
     * @param string|null $id {{ singularHumanName }} id.
     * @return \Cake\Http\Response|null
     * @throws \Cake\Datasource\Exception\RecordNotFoundException When record not found.
     */
    public function view($id = null)
    {
{% if 'api' in prefix|lower %}
        ${{ singularName }} = $this->{{ currentModelName }}->get($id,
            contain: [{{ Bake.stringifyList(allAssociations, {'indent': false})|raw }}],
        );

        $this->Crud->serialize(compact('{{ singularName }}'));
{% else %}
        $query = $this->{{ currentModelName }}->find(
            contain: [{{ Bake.stringifyList(allAssociations, {'indent': false})|raw }}],
            conditions: ['{{ currentModelName }}.id' => $id]
        );

        $results = $this->Crud->paginateAssociations($query);
        $this->set($results);
{% endif %}
    }
